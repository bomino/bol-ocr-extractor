---
apiVersion: v1
kind: Secret
metadata:
  name: bol-ocr-secrets
  namespace: bol-ocr
  labels:
    app: bol-ocr-extractor
    component: secrets
type: Opaque
data:
  # Redis password (base64 encoded)
  # Default: "SecureRedisPassword123!"
  # Use: echo -n "your-password" | base64
  redis-password: U2VjdXJlUmVkaXNQYXNzd29yZDEyMyE=
  
  # Grafana admin password (base64 encoded)
  # Default: "SecureGrafanaAdmin123!"
  # Use: echo -n "your-password" | base64
  grafana-password: U2VjdXJlR3JhZmFuYUFkbWluMTIzIQ==
  
  # Database credentials (if needed for future enhancements)
  # db-username: YWRtaW4=  # admin
  # db-password: U2VjdXJlRGJQYXNzd29yZDEyMyE=  # SecureDbPassword123!

---
apiVersion: v1
kind: Secret
metadata:
  name: bol-ocr-tls
  namespace: bol-ocr
  labels:
    app: bol-ocr-extractor
    component: tls
type: kubernetes.io/tls
data:
  # TLS certificate and key (base64 encoded)
  # Replace with your actual certificate and key
  # Use: cat your-cert.crt | base64 -w 0
  # Use: cat your-cert.key | base64 -w 0
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCi4uLllPVVIgQ0VSVElGSUNBVEUgSEVSRS4uLgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCi4uLllPVVIgUFJJVkFURSBLRVkgSEVSRS4uLgotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0t

---
# Example of using external secret management (AWS Secrets Manager, HashiCorp Vault, etc.)
# Uncomment and modify for production use
# apiVersion: external-secrets.io/v1beta1
# kind: SecretStore
# metadata:
#   name: vault-backend
#   namespace: bol-ocr
# spec:
#   provider:
#     vault:
#       server: "https://vault.example.com:8200"
#       path: "secret"
#       version: "v2"
#       auth:
#         kubernetes:
#           mountPath: "kubernetes"
#           role: "bol-ocr-role"
#           serviceAccountRef:
#             name: "bol-ocr-service-account"

# ---
# apiVersion: external-secrets.io/v1beta1
# kind: ExternalSecret
# metadata:
#   name: bol-ocr-external-secrets
#   namespace: bol-ocr
# spec:
#   refreshInterval: 15s
#   secretStoreRef:
#     name: vault-backend
#     kind: SecretStore
#   target:
#     name: bol-ocr-secrets
#     creationPolicy: Owner
#   data:
#   - secretKey: redis-password
#     remoteRef:
#       key: bol-ocr/redis
#       property: password
#   - secretKey: grafana-password
#     remoteRef:
#       key: bol-ocr/grafana
#       property: admin-password