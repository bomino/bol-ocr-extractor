---
# Network policy to secure BOL OCR application traffic
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: bol-ocr-app-network-policy
  namespace: bol-ocr
  labels:
    app: bol-ocr-extractor
    component: network-security
spec:
  podSelector:
    matchLabels:
      app: bol-ocr-extractor
      component: application
  policyTypes:
    - Ingress
    - Egress
  
  ingress:
    # Allow traffic from Nginx
    - from:
        - podSelector:
            matchLabels:
              app: bol-ocr-extractor
              component: nginx
      ports:
        - protocol: TCP
          port: 8501
    
    # Allow monitoring traffic from Prometheus
    - from:
        - podSelector:
            matchLabels:
              app: prometheus
      ports:
        - protocol: TCP
          port: 8501
  
  egress:
    # Allow DNS resolution
    - to: []
      ports:
        - protocol: UDP
          port: 53
        - protocol: TCP
          port: 53
    
    # Allow HTTPS for external dependencies
    - to: []
      ports:
        - protocol: TCP
          port: 443
    
    # Allow Redis communication
    - to:
        - podSelector:
            matchLabels:
              app: bol-ocr-extractor
              component: redis
      ports:
        - protocol: TCP
          port: 6379
    
    # Allow Kubernetes API access
    - to: []
      ports:
        - protocol: TCP
          port: 6443

---
# Network policy for Nginx
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: bol-ocr-nginx-network-policy
  namespace: bol-ocr
  labels:
    app: bol-ocr-extractor
    component: network-security
spec:
  podSelector:
    matchLabels:
      app: bol-ocr-extractor
      component: nginx
  policyTypes:
    - Ingress
    - Egress
  
  ingress:
    # Allow HTTP/HTTPS traffic from anywhere (load balancer)
    - from: []
      ports:
        - protocol: TCP
          port: 80
        - protocol: TCP
          port: 443
    
    # Allow monitoring traffic from Prometheus
    - from:
        - podSelector:
            matchLabels:
              app: prometheus
      ports:
        - protocol: TCP
          port: 9113
  
  egress:
    # Allow DNS resolution
    - to: []
      ports:
        - protocol: UDP
          port: 53
        - protocol: TCP
          port: 53
    
    # Allow communication to application pods
    - to:
        - podSelector:
            matchLabels:
              app: bol-ocr-extractor
              component: application
      ports:
        - protocol: TCP
          port: 8501

---
# Network policy for Redis
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: bol-ocr-redis-network-policy
  namespace: bol-ocr
  labels:
    app: bol-ocr-extractor
    component: network-security
spec:
  podSelector:
    matchLabels:
      app: bol-ocr-extractor
      component: redis
  policyTypes:
    - Ingress
    - Egress
  
  ingress:
    # Allow connections from application pods only
    - from:
        - podSelector:
            matchLabels:
              app: bol-ocr-extractor
              component: application
      ports:
        - protocol: TCP
          port: 6379
    
    # Allow monitoring traffic from Redis exporter
    - from:
        - podSelector:
            matchLabels:
              app: redis-exporter
      ports:
        - protocol: TCP
          port: 6379
    
    # Allow monitoring traffic from Prometheus
    - from:
        - podSelector:
            matchLabels:
              app: prometheus
      ports:
        - protocol: TCP
          port: 9121
  
  egress:
    # Allow DNS resolution
    - to: []
      ports:
        - protocol: UDP
          port: 53
        - protocol: TCP
          port: 53

---
# Network policy for monitoring components
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: bol-ocr-monitoring-network-policy
  namespace: bol-ocr
  labels:
    app: bol-ocr-extractor
    component: network-security
spec:
  podSelector:
    matchLabels:
      app: prometheus
  policyTypes:
    - Ingress
    - Egress
  
  ingress:
    # Allow Grafana to access Prometheus
    - from:
        - podSelector:
            matchLabels:
              app: grafana
      ports:
        - protocol: TCP
          port: 9090
    
    # Allow access from monitoring namespace (if using separate namespace)
    - from:
        - namespaceSelector:
            matchLabels:
              name: monitoring
      ports:
        - protocol: TCP
          port: 9090
    
    # Allow external access for admin (restrict in production)
    - from: []
      ports:
        - protocol: TCP
          port: 9090
  
  egress:
    # Allow DNS resolution
    - to: []
      ports:
        - protocol: UDP
          port: 53
        - protocol: TCP
          port: 53
    
    # Allow scraping metrics from all pods
    - to:
        - podSelector: {}
      ports:
        - protocol: TCP
          port: 8501  # Application metrics
        - protocol: TCP
          port: 9113  # Nginx metrics
        - protocol: TCP
          port: 9121  # Redis metrics
    
    # Allow access to Kubernetes API for service discovery
    - to: []
      ports:
        - protocol: TCP
          port: 6443

---
# Network policy for Grafana
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: bol-ocr-grafana-network-policy
  namespace: bol-ocr
  labels:
    app: bol-ocr-extractor
    component: network-security
spec:
  podSelector:
    matchLabels:
      app: grafana
  policyTypes:
    - Ingress
    - Egress
  
  ingress:
    # Allow external access for dashboards (restrict in production)
    - from: []
      ports:
        - protocol: TCP
          port: 3000
  
  egress:
    # Allow DNS resolution
    - to: []
      ports:
        - protocol: UDP
          port: 53
        - protocol: TCP
          port: 53
    
    # Allow access to Prometheus
    - to:
        - podSelector:
            matchLabels:
              app: prometheus
      ports:
        - protocol: TCP
          port: 9090

---
# Default deny-all policy for the namespace (uncomment for maximum security)
# apiVersion: networking.k8s.io/v1
# kind: NetworkPolicy
# metadata:
#   name: bol-ocr-default-deny-all
#   namespace: bol-ocr
#   labels:
#     app: bol-ocr-extractor
#     component: network-security
# spec:
#   podSelector: {}
#   policyTypes:
#     - Ingress
#     - Egress